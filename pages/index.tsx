import type { NextPage } from "next";
import { useState, SyntheticEvent } from "react";
import Input from "../component/Input";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { dataHandler } from "../data/dataHandler";
import { Movie } from "../model/Movie";
import MovieCard from "../component/MovieCard";
import MovieDetail from "../component/MovieDetail";
import Header from "../component/Header";

const Home: NextPage = () => {
  const defaultDetailState = {
    info: { content: "", wikiLink: "", imdbLink: "" },
    title: "",
    imgSrc: "",
    score: 0,
    closeDetails: closeDetails,
  };

  const [searchValue, setSearchValue] = useState("");
  const [bodyScroll, setBodyHeight] = useState("");
  const [searchedMovies, setSearchedMovies]: [Movie[], Function] = useState([]);
  const [detailVisibility, setDetailVisibility] = useState("hideElement");
  const [detailsContent, setDetailsContent]: [
    {
      info: { content: string; wikiLink: string; imdbLink: string };
      title: string;
      imgSrc: string;
      score: number;
      closeDetails: Function;
    },
    Function
  ] = useState({ ...defaultDetailState });

  function closeDetails() {
    allowBodyScroll();
    setDetailVisibility(() => {
      return "hideElement";
    });
  }

  function handleInputChange(event: SyntheticEvent) {
    const input = event.target as HTMLInputElement;
    setSearchValue(input.value);
  }

  async function handleSubmit(event: SyntheticEvent) {
    event.preventDefault();
    const data = await dataHandler.getMoviesByName(searchValue);
    const movies: Movie[] = data.data.searchMovies;
    setSearchedMovies((): Movie[] => [...movies]);
  }

  function preventBodyScroll() {
    setBodyHeight(styles.noScroll);
  }

  function allowBodyScroll() {
    setBodyHeight("");
  }

  async function showMovieDetails(
    movieTitle: string,
    score: number,
    imageSrc: string
  ) {
    const result = { content: "", wikiLink: "", imdbLink: "" };
    const pageDetails = await dataHandler.getWikiPage(movieTitle);
    const movieId: string = Object.keys(pageDetails.query.pages)[0];
    if (movieId !== "-1") {
      if (pageDetails.query.pages[movieId].hasOwnProperty("extract")) {
        result.content = pageDetails.query.pages[movieId].extract;
      }
      result.wikiLink = `https://en.wikipedia.org/wiki/${movieTitle}`;
      const pageLinks = await dataHandler.getWikiPageLinks(movieTitle);
      const allLinks = pageLinks.query.pages[movieId].extlinks;
      if (pageLinks.query.pages[movieId].hasOwnProperty("extlinks")) {
        const myLinkObj = allLinks.find((current: Object) =>
          Object.values(current)[0].includes("imdb.com/title")
        );
        if (myLinkObj) {
          result.imdbLink = Object.values(myLinkObj)[0] as string;
        }
      }
    }
    const newContent = {
      ...detailsContent,
      info: { ...result },
      title: movieTitle,
      imgSrc: imageSrc,
      score: score,
    };
    preventBodyScroll();
    setDetailsContent({ ...defaultDetailState });
    setDetailsContent(newContent);
    setDetailVisibility("");
  }

  return (
    <div className={`${bodyScroll}`}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <MovieDetail
        info={detailsContent.info}
        title={detailsContent.title}
        imgSrc={detailsContent.imgSrc}
        score={detailsContent.score}
        closeDetails={detailsContent.closeDetails}
        visibility={detailVisibility}
      />
      <main className={styles.main}>
        <div className={styles.upper}>
          <div className={styles.container}>
            <Header
              firstLine="Find your "
              secondLine="favourite"
              colourText=" movies"
            />
            <form onSubmit={(event) => handleSubmit(event)}>
              <Input
                value={searchValue}
                setValue={handleInputChange}
                label={"Find a movie..."}
                name="text"
              />
              <button type="submit">Find Movie</button>
            </form>
          </div>
        </div>
        <div className={styles.containerWrapper}>
          <div className={styles.cardContainer}>
            {searchedMovies.map((movie: Movie) => (
              <MovieCard
                title={movie.name}
                imgUrl={movie.img?.url}
                overview={movie.overview}
                score={movie.score}
                key={+movie.id}
                fn={showMovieDetails}
              />
            ))}
          </div>
        </div>
      </main>
    </div>
  );
};

export default Home;
